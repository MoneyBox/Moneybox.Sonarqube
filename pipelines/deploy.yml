trigger:
  branches:
    include:
      - main 

variables:
  azureSubscription: 'Rich-temp'
  appName: 'app-sonarqube-operations00-neu'         
  resourceGroup: 'sonarqube-resource-group'    
  startupScript: 'start-sonar.ps1'        
  artifactName: 'drop'              

stages:
- stage: Build
  displayName: "Build: Publish Script"
  jobs:
    - job: BuildAndPublish
      displayName: "Publish Script as Build Artifact"
      pool:
        vmImage: 'windows-latest'
      steps:
        # Checkout the repository
        - checkout: self
          displayName: "Checkout Repository"

        # Verify the script exists
        - powershell: |
            Write-Host "Verifying that the startup script exists..."
            Get-ChildItem -Path "$(Build.SourcesDirectory)/$(startupScript)" -ErrorAction Stop
          displayName: "Verify Startup Script Exists"

        # Publish the startup script as a build artifact
        - task: PublishBuildArtifacts@1
          displayName: "Publish Script as Build Artifact"
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)/$(startupScript)'  # Path to the script file
            ArtifactName: '$(artifactName)'                              # Name of the published artifact

- stage: Deploy
  displayName: "Deploy to Azure App Service"
  dependsOn: Build
  condition: succeeded()
  jobs:
    - job: DeployScript
      displayName: "Deploy Script File"
      pool:
        vmImage: 'windows-latest'
      steps:
        # Download the published artifact
        - task: DownloadBuildArtifacts@0
          displayName: "Download Published Script"
          inputs:
            artifactName: '$(artifactName)'  # Name of the artifact to download
            downloadPath: '$(System.ArtifactsDirectory)'  # Path to download the artifact

        # Deploy the script directly to Azure App Service
        - task: AzureWebApp@1
          displayName: "Deploy Script to Azure App Service"
          inputs:
            azureSubscription: '$(azureSubscription)'
            appType: 'webApp'
            appName: '$(appName)'
            package: '$(System.ArtifactsDirectory)/$(startupScript)'
